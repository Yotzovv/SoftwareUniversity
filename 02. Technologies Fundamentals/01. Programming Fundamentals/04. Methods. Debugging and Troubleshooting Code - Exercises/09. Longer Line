using System;
using System.Collections.Generic;
using System.Linq;
public class GeometryCalculator
{
    static void Main()
    {
        double x1 = double.Parse(Console.ReadLine());
        double y1 = double.Parse(Console.ReadLine());
        double x2 = double.Parse(Console.ReadLine());
        double y2 = double.Parse(Console.ReadLine());
 
        double x3 = double.Parse(Console.ReadLine());
        double y3 = double.Parse(Console.ReadLine());
        double x4 = double.Parse(Console.ReadLine());
        double y4 = double.Parse(Console.ReadLine());
 
        LongerLine(x1, y1, x2, y2, x3, y3, x4, y4);
    }
 
    public static void LongerLine(double x1, double y1, double x2, double y2, double x3, double y3, double x4, double y4)
    {
        double firstLine = Math.Sqrt(Math.Pow((x1 - x2), 2) + Math.Pow((y1 - y2), 2));
        double secondLin = Math.Sqrt(Math.Pow((x3 - x4), 2) + Math.Pow((y3 - y4), 2));
 
        if (firstLine > secondLin)
        {
            CloserPointToCenter(x1, y1, x2, y2);
        }
        else
        {
            CloserPointToCenter(x3, y3, x4, y4);
        }
    }
 
    private static void CloserPointToCenter(double x1, double y1, double x2, double y2)
    {
        double firstDistance = Math.Pow(x1, 2) + Math.Pow(y1, 2);
        double secondDistance = Math.Pow(x2, 2) + Math.Pow(y2, 2);
 
        if (firstDistance <= secondDistance)
        {
            Console.WriteLine("({0}, {1})({2}, {3})", x1, y1, x2, y2);
        }
        else
        {
            Console.WriteLine("({0}, {1})({2}, {3})", x2, y2, x1, y1);
        }
    }
}