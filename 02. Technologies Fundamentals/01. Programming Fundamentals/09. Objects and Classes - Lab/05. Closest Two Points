using System;
using System.Collections.Generic;
using System.Globalization;
using System.Linq;
using System.Threading.Tasks;
using System.Numerics;

namespace Exercises_1
{
    public class Program
    {
        public static void Main(string[] args)
        {
            Point[] p1 = GetPoints();
            Point[] closestPTS = FindClosest(p1);
            PrintResult(closestPTS);
            PrintPoint(closestPTS[0]);
            PrintPoint(closestPTS[1]);
        }

        private static void PrintPoint(Point point)
        {
            Console.WriteLine($"{point.X}, {point.Y}");
        }

        private static void PrintResult(Point[] points)
        {
            double distance = CalcDistance(points[0], points[1]);
            Console.WriteLine($"{distance:f3}");
            
        }

        private static Point[] FindClosest(Point[] p1)
        {
            double max = double.MaxValue;
            Point[] p0ints_ = null;

            for(int a = 0;a < p1.Length;a++)
            {
                for(int b = a + 1;b <= p1.Length-1;b++)
                {
                    double distance = CalcDistance(p1[a], p1[b]);

                    if(distance < max)
                    {
                        max = distance;
                        p0ints_ = new Point[] { p1[a], p1[b] };
                    }
                }
            }
            return p0ints_;
        }

        private static double CalcDistance(Point point1, Point point2)
        {
            int a = point1.X - point2.X;
            int b = point1.Y - point2.Y;
            return Math.Sqrt(a * a + b * b);
        }

        public static Point[] GetPoints()
        {
            int n = int.Parse(Console.ReadLine());
            Point[] points = new Point[n];

            for(int i = 0;i < n;i++)
            {
                points[i] = ReadPoint();
            }
            return points;
        }

        public static Point ReadPoint()
        {
            int[] point = Console.ReadLine().Split().Select(int.Parse).ToArray();
            Point pts = new Point();
            pts.X = point[0];
            pts.Y = point[1];
            return pts;
        }
    }

    public class Point
    {
        public int X { get; set; }
        public int Y { get; set; }
    }
}